import type { NextPage } from "next";
import Head from "next/head";
import { useState, useEffect } from "react";
import { onSnapshot, addDoc, query, collection } from "firebase/firestore";
import { db, auth } from "../lib/firebase";
import TaskItem from "./TaskItem";
import { onAuthStateChanged, signOut } from "firebase/auth";
import { useRouter } from "next/router";

const Home: NextPage = (props: any) => {
	const [input, setInput] = useState("");
	const [tasks, setTasks] = useState([{ id: "", title: "" }]);
	const router = useRouter();

	const newTodo = async (e: any) => {
		await addDoc(collection(db, "tasks"), { title: input });
		setInput("");
	};

	useEffect(() => {
		const unSub = onAuthStateChanged(auth, (user) => {
			!user && router.push("/Login/");
		});
		return () => unSub();
	});

	useEffect(() => {
		const q = query(collection(db, "tasks"));
		const unSub = onSnapshot(q, (querySnapshot) => {
			setTasks(
				querySnapshot.docs.map((doc) => ({
					id: doc.id,
					title: doc.data().title,
				}))
			);
		});
		return () => unSub();
	}, []);

	return (
		<div className={`h-screen flex flex-col items-center mt-32`}>
			<Head>
				<title>Create Next App</title>
				<meta name="description" content="Generated by create next app" />
				<link rel="icon" href="/favicon.ico" />
			</Head>
			<svg
				xmlns="http://www.w3.org/2000/svg"
				className={`h-6 w-6 text-sky-500 mb-5 cursor-pointer`}
				fill="none"
				viewBox="0 0 24 24"
				stroke="currentColor"
				strokeWidth={2}
				onClick={async () => {
					try {
						await signOut(auth);
						router.push("/Login/");
					} catch (error: any) {
						alert(error.message);
					}
				}}>
				<path
					strokeLinecap="round"
					strokeLinejoin="round"
					d="M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1"
				/>
			</svg>
			<div className={`flex`}>
				<input
					placeholder="input new todo"
					value={input}
					onChange={(e: React.ChangeEvent<HTMLInputElement>) =>
						setInput(e.target.value)
					}
					className={`border-b-2 border-sky-500 focus:outline-sky-500 focus:border-none pl-2`}
				/>
				<svg
					xmlns="http://www.w3.org/2000/svg"
					className={`h-6 w-6 text-sky-500 ml-2 cursor-pointer`}
					fill="none"
					viewBox="0 0 24 24"
					stroke="currentColor"
					strokeWidth={2}
					onClick={newTodo}>
					<path
						strokeLinecap="round"
						strokeLinejoin="round"
						d="M12 9v3m0 0v3m0-3h3m-3 0H9m12 0a9 9 0 11-18 0 9 9 0 0118 0z"
					/>
				</svg>
			</div>
			<div className={`mt-16`}>
				{tasks.map((task) => (
					<TaskItem key={task.id} title={task.title} id={task.id} />
				))}
			</div>
		</div>
	);
};

export default Home;
